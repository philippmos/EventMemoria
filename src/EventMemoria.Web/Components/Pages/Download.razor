@page "/download"

@using EventMemoria.Web.Common.Constants
@using EventMemoria.Web.Common.Settings
@using Microsoft.Extensions.Options
@using EventMemoria.Web.Components.Download
@using Microsoft.FeatureManagement

@rendermode InteractiveServer

<CustomPageTitle Value="Download" />

<HeaderComponent />
	
<div class="qr-code-container download-page-container">
	<MudStack Spacing="4" AlignItems="AlignItems.Center" Class="download-content-stack">

		<DownloadInfo />

		<DownloadForm @bind-EmailAddress="emailAddress"
						@bind-IsLoading="isLoading"
						StatusMessage="@statusMessage"
						StatusSeverity="statusSeverity"
						OnDownloadSuccess="HandleDownloadSuccess"
						OnDownloadError="HandleDownloadError"
						OnStatusMessageCleared="() => statusMessage = string.Empty" />

	</MudStack>
</div>

@code {
	[Inject] private IOptions<CustomizationOptions> CustomizationOptions { get; set; } = null!;
	[Inject] private IFeatureManager FeatureManager { get; set; } = null!;
	[Inject] private NavigationManager NavigationManager { get; set; } = null!;

	private bool isLoading;
	private string emailAddress = string.Empty;
	private string statusMessage = string.Empty;
	private Severity statusSeverity = Severity.Info;

	protected override async Task OnInitializedAsync()
	{
		if (!await FeatureManager.IsEnabledAsync(FeatureFlags.EnableDownloadPage))
		{
			NavigationManager.NavigateTo("/", true);
			return;
		}
	}

	private void HandleDownloadSuccess()
	{
		statusMessage = "E-Mail-Adresse erfolgreich registriert! Du erhältst eine E-Mail mit dem Download-Link, sobald alle Bilder hochgeladen wurden.";
		statusSeverity = Severity.Success;
		StateHasChanged();
	}

	private void HandleDownloadError()
	{
		statusMessage = "Fehler beim Registrieren der E-Mail-Adresse. Bitte versuche es später erneut.";
		statusSeverity = Severity.Error;
		StateHasChanged();
	}
}
