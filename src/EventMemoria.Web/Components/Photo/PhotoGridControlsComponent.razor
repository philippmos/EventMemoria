@using EventMemoria.Web.Common.Constants

<MudPaper Class="pa-3" Elevation="1">
    <MudStack Row Spacing="3" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
        <MudStack Row Spacing="6" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.body2" Class="text-muted">
                Fotos pro Zeile:
            </MudText>
            <MudStack Row Spacing="1">
                @foreach (var option in GetPhotosPerRowOptions())
                {
                    <MudButton OnClick="@(() => OnPhotosPerRowChanged.InvokeAsync(option))"
                               Size="Size.Small"
                               Variant="@(PhotosPerRow == option ? Variant.Filled : Variant.Outlined)"
                               Color="Color.Default"
                               Class="@(PhotosPerRow == option ? "wedding-button-selected" : "")">
                        @option
                    </MudButton>
                }
            </MudStack>
        </MudStack>
    </MudStack>
</MudPaper>

@code {
    [Parameter] public int PhotosPerRow { get; set; }
    [Parameter] public EventCallback<int> OnPhotosPerRowChanged { get; set; }

    private static int[] GetPhotosPerRowOptions() 
        => ApplicationConstants.PhotoGrid.PhotosPerRowHeights.Keys.OrderBy(k => k).ToArray();
}
