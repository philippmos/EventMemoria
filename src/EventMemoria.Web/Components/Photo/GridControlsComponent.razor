@using EventMemoria.Web.Common.Constants

<MudPaper Class="pa-3" Elevation="1">
    <div class="d-flex flex-column">
        <MudText Typo="Typo.body2" Class="text-muted mb-3 text-center">
            Fotos pro Zeile:
        </MudText>
        
        <div class="grid-controls-container">
            <MudChipSet T="int" 
                        SelectedValue="@PhotosPerRow"
                        SelectedValueChanged="@((int value) => OnPhotosPerRowChanged.InvokeAsync(value))"
                        mandatory="true"
                        Class="grid-controls-chipset">
                @foreach (var option in GetPhotosPerRowOptions())
                {
                    <MudChip T="int" 
                             Value="option"
                             Color="Color.Dark"
                             Variant="Variant.Text"
                             Size="Size.Medium"
                             Class="grid-controls-chip">
                        @option
                    </MudChip>
                }
            </MudChipSet>
        </div>
    </div>
</MudPaper>

@code {
    [Parameter] public int PhotosPerRow { get; set; }
    [Parameter] public EventCallback<int> OnPhotosPerRowChanged { get; set; }

    private static int[] GetPhotosPerRowOptions() 
        => ApplicationConstants.PhotoGrid.Configuration.Select(x => x.Rows).OrderBy(k => k).ToArray();
}
